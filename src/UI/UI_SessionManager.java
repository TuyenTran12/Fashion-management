/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import DAO.Dataservice;
import GUI.GUI_ShowProcess;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import oracle.jdbc.OracleTypes;

/**
 *
 * @author LunChan
 */
public class UI_SessionManager extends javax.swing.JPanel {
     private int process;

    public int getProcess() {
        return process;
    }

    public void setProcess(int process) {
        this.process = process;
    }

    /**
     * Creates new form GUI_SessionManager1
     */
    public UI_SessionManager() {
        initComponents();
        showDataTable(jTable_SessionManager);
        loadUsernamesIntoComboBox();
        // Disable delete button initially
        jButton_DeleteSesion.setEnabled(false);

        // Add ListSelectionListener to JTable
        jTable_SessionManager.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    if (jTable_SessionManager.getSelectedRow() != -1) {
                        // Enable delete button and set selected SID and Serial values
                        jButton_DeleteSesion.setEnabled(true);
                        int selectedProcess = (int) jTable_SessionManager.getValueAt(jTable_SessionManager.getSelectedRow(), 3);
                        setProcess(selectedProcess);
                    } else {
                        // No row is selected, disable delete button
                        jButton_DeleteSesion.setEnabled(false);
                    }
                }
            }
        });
        jComboBox_Username.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    String selectedUsername = jComboBox_Username.getSelectedItem().toString();
                    if (!selectedUsername.isEmpty()) {
                        searchUsername(selectedUsername);
                    } else {
                        showDataTable(jTable_SessionManager);
                    }
                }
            }
        });
        showDataTable(jTable_SessionManager);
    }
    
    public static void showDataTable(JTable table) {
        ResultSet rs = null;
        try {
            Connection conn = Dataservice.Getconnect(); // Kết nối đến cơ sở dữ liệu
            CallableStatement cs = conn.prepareCall("{CALL Proc_get_active_sessions(?)}");
            cs.registerOutParameter(1, OracleTypes.CURSOR);
            cs.execute();
            rs = (ResultSet) cs.getObject(1);

            DefaultTableModel model = new DefaultTableModel(new String[]{"Số Lượng Session", "SID", "Serial", "Process", "Username", 
                "Ứng Dụng"}, 0);
            while (rs.next()) {
                int soLuongSession = rs.getInt("soLuongSession");
                int sid = rs.getInt("sid");
                int serial = rs.getInt("serial");
                int process = rs.getInt("process");
                String username = rs.getString("username");
                String program = rs.getString("ungDungDangDangNhap");

                model.addRow(new Object[]{soLuongSession, sid, serial, process, username, program});
            }
            table.setModel(model);
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (rs != null)
                    rs.close();
            } catch (SQLException sql) {
                sql.printStackTrace();
            }
    }
}



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_SessionManager = new javax.swing.JTable();
        jButton_ShowProcess = new javax.swing.JButton();
        jButton_DeleteSesion = new javax.swing.JButton();
        jComboBox_Username = new javax.swing.JComboBox<>();

        jTable_SessionManager.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Số Lượng Sesion", "SID", "Serial", "Process", "Ứng dụng đang đăng nhập"
            }
        ));
        jTable_SessionManager.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_SessionManagerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_SessionManager);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 641, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        jButton_ShowProcess.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jButton_ShowProcess.setText("Xem Process");
        jButton_ShowProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ShowProcessActionPerformed(evt);
            }
        });

        jButton_DeleteSesion.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jButton_DeleteSesion.setText("Huỷ Session");
        jButton_DeleteSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DeleteSesionActionPerformed(evt);
            }
        });

        jComboBox_Username.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jComboBox_Username, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_ShowProcess, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton_DeleteSesion, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_ShowProcess, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_DeleteSesion, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_Username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_DeleteSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DeleteSesionActionPerformed
        int selectedRow = jTable_SessionManager.getSelectedRow();
        if (selectedRow != -1) {
            Object sidObject = jTable_SessionManager.getValueAt(selectedRow, 1);
            Object serialObject = jTable_SessionManager.getValueAt(selectedRow, 2);
            if (sidObject != null && serialObject != null) {
                int sid = Integer.parseInt(sidObject.toString());
                int serial = Integer.parseInt(serialObject.toString());
                System.out.println("sid: "+sid + "serial: "+serial);
                try {
                    Connection conn = Dataservice.Getconnect();
                    CallableStatement stmt = conn.prepareCall("{call Proc_cancel_session(?, ?)}"); // Corrected the syntax here
                    stmt.setInt(1, sid);
                    stmt.setInt(2, serial);
                    stmt.execute();

                    System.out.println("Session with SID " + sid + " and Serial " + serial + " has been cancelled.");
                    JOptionPane.showMessageDialog(this, "Huỷ thành công.");
                    jTable_SessionManager.setModel(new DefaultTableModel(null, new String[]{"Số Lượng Session", "SID", 
                        "Serial", "Process", "Username", "Ứng Dụng"}));
                    showDataTable(jTable_SessionManager);

                    stmt.close();
                } catch (SQLException ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Session này không thể huỷ");
                }
            }
        }
    }//GEN-LAST:event_jButton_DeleteSesionActionPerformed

    private void jTable_SessionManagerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_SessionManagerMouseClicked
        int selectedRow = jTable_SessionManager.getSelectedRow();
        if (selectedRow != -1) {
            jTable_SessionManager.setVisible(true); // Show delete button on row selection
        } else {
            jTable_SessionManager.setVisible(false); // Hide delete button if no row is selected
        }
    }//GEN-LAST:event_jTable_SessionManagerMouseClicked

    private void jButton_ShowProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ShowProcessActionPerformed
        GUI.GUI_ShowProcess gUI_ShowProcess = new GUI_ShowProcess(getProcess());
        gUI_ShowProcess.setVisible(true);
    }//GEN-LAST:event_jButton_ShowProcessActionPerformed

    private void loadUsernamesIntoComboBox() {
        ResultSet rs = null;
        try {
            Connection conn = Dataservice.Getconnect();
            CallableStatement cs = conn.prepareCall("{CALL Proc_Get_Usernames_Session(?)}");
            cs.registerOutParameter(1, OracleTypes.CURSOR);
            cs.execute();
            rs = (ResultSet) cs.getObject(1);

            jComboBox_Username.removeAllItems(); // Clear existing items in JComboBox

            while (rs.next()) {
                String username = rs.getString("username");
                jComboBox_Username.addItem(username); // Add username to JComboBox
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                if (rs != null) rs.close();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }

    
    private void searchUsername(String username) {
        DefaultTableModel model = (DefaultTableModel) jTable_SessionManager.getModel();
        int rowCount = model.getRowCount();
        boolean found = false;
         for (int i = 0; i < rowCount; i++) {
            Object value = model.getValueAt(i, 4); // Assuming username is in the first column
            if (value != null && value.toString().trim().equalsIgnoreCase(username.trim())) {
                // Highlight or scroll to the matching row
                jTable_SessionManager.setRowSelectionInterval(i, i);
                jTable_SessionManager.scrollRectToVisible(jTable_SessionManager.getCellRect(i, 0, true));
                found = true;
                break;
            }
        }
        if (!found) {
            JOptionPane.showMessageDialog(this, "Username not found in the table.", "Not Found", 
                    JOptionPane.INFORMATION_MESSAGE);
        }
    }
    
    /*
    /** 
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI_SessionManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI_SessionManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI_SessionManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI_SessionManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UI_SessionManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_DeleteSesion;
    private javax.swing.JButton jButton_ShowProcess;
    private javax.swing.JComboBox<String> jComboBox_Username;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_SessionManager;
    // End of variables declaration//GEN-END:variables
}
