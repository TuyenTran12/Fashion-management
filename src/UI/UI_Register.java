/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import DAO.Dataservice;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author Admin
 */
public class UI_Register extends javax.swing.JPanel {

    /**
     * Creates new form UI_Register
     */
    public UI_Register() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_username = new javax.swing.JTextField();
        txt_password = new javax.swing.JPasswordField();
        txtreenterpassword = new javax.swing.JPasswordField();
        btn_dangki = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Đăng Kí Tài Khoản");

        jLabel2.setText("Username: ");

        jLabel3.setText("Password:");

        jLabel4.setText("Re-Enter Password:");

        btn_dangki.setText("Đăng Kí");
        btn_dangki.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_dangkiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_username, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                            .addComponent(txt_password)
                            .addComponent(txtreenterpassword)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jLabel1)))
                .addGap(52, 52, 52))
            .addGroup(layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(btn_dangki, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_username, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_password, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtreenterpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(btn_dangki, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    public static void createUserAndGrantRole(String username, String password) {
    Connection connection = null;
    Statement statement = null;

    try {
        // Kết nối đến cơ sở dữ liệu
        connection = Dataservice.Getconnect();

        // Tạo một đối tượng Statement
        statement = connection.createStatement();

        // Tạo người dùng mới
        String createUserSQL = "CREATE USER " + username + " IDENTIFIED BY " + password;
        statement.executeUpdate(createUserSQL);

        // Cấp quyền kết nối (CREATE SESSION) cho người dùng mới
        String grantSessionSQL = "GRANT CREATE SESSION TO " + username;
        statement.executeUpdate(grantSessionSQL);

        // Cấp vai trò cho người dùng mới
        String grantRoleSQL = "GRANT nhanvien TO " + username;
        statement.executeUpdate(grantRoleSQL);

        JOptionPane.showMessageDialog(null, "Thành công! Người dùng " + username + " đã được tạo và được cấp quyền.");
    } catch (SQLException e) {
        // Xử lý lỗi
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Thất bại! Không thể tạo người dùng " + username + " và cấp quyền.");
    }
}


    private void btn_dangkiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_dangkiActionPerformed
        if(!Dataservice.user.equalsIgnoreCase("admin1")) {
        JOptionPane.showMessageDialog(btn_dangki, "Chỉ Có admin mới cấp quyền được!");
        return;
    }

        String username = txt_username.getText();
        String password = String.valueOf(txt_password.getPassword());
        String reenterPassword = String.valueOf(txtreenterpassword.getPassword());

        if(username.isEmpty() || password.isEmpty() || reenterPassword.isEmpty()) {
            JOptionPane.showMessageDialog(btn_dangki, "Thiếu Dữ Liệu!");
            return;
        }

        if(!password.equals(reenterPassword)) {
            JOptionPane.showMessageDialog(btn_dangki, "Không Trùng Password!!");
            return;
        }

        try {
            // Gọi hàm callStoredProcedure để tạo người dùng mới
            createUserAndGrantRole(username, password);

        } catch(Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btn_dangkiActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_dangki;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField txt_password;
    private javax.swing.JTextField txt_username;
    private javax.swing.JPasswordField txtreenterpassword;
    // End of variables declaration//GEN-END:variables
}
